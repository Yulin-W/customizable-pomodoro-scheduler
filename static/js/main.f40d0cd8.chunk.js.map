{"version":3,"sources":["components/TimerDisplay.js","components/TaskDisplay.js","components/TimerComponent.js","components/PeriodInput.js","components/ScheduleEntry.js","scripts/secondsToHms.js","scripts/hmsToSeconds.js","components/ScheduleComponent.js","scripts/secondsToHmsString.js","pieChartTheme.js","components/PieChartDisplay.js","components/SummaryComponent.js","scripts/numPadZeroToTwoPlaces.js","components/HelpBackdrop.js","themeDict.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","timeText","color","palette","primary","main","userSelect","timerContainer","width","height","borderRadius","borderColor","TimerDisplay","hr","min","sec","classes","Box","border","className","display","flexDirection","alignItems","justifyContent","Grid","container","direction","justify","Typography","item","variant","TaskDisplay","current","next","TimerComponent","this","props","data","start","stop","reset","timer","taskDisplayContainer","timerActual","timerButtonContainer","ButtonGroup","size","Button","onClick","React","Component","withStyles","backgroundColor","background","paper","flexGrow","numInput","marginLeft","marginRight","PeriodInput","disabled","editFunc","index","TextField","margin","label","value","type","onChange","e","Number","target","InputLabelProps","shrink","ScheduleEntry","isFirst","isLast","editable","entry","upFunc","downFunc","delFunc","addFunc","ListItem","divider","xs","sm","md","lg","xl","name","IconButton","disableElevation","secondsToHms","s","hmsToSeconds","hms","fabIconDict","ScheduleComponent","state","taskSchedule","map","period","editing","settings","updateSchedule","func","changePage","setEditing","bind","shiftUpEntry","shiftDownEntry","deleteEntry","addEntry","editEntry","changeSetting","currentData","setState","splice","currentEditingState","newSchedule","newSettings","key","currentSettings","checked","entries","arr","length","schedule","List","addButtonContainer","FormGroup","column","settingsContainer","Object","FormControlLabel","control","Switch","Fab","fab","toString","overflowY","position","bottom","right","left","secondsToHmsString","padStart","join","pieChartTheme","chartContainer","PieChartDisplay","useState","hovered","setHovered","chartData","push","title","dataToPieChartdata","data-tip","data-for","lineWidth","paddingAngle","radius","labelPosition","dataEntry","labelStyle","fontSize","fontFamily","pointerEvents","pieChart","animate","onMouseOver","_","onMouseOut","id","getContent","tooltipContent","summary","numPadZeroToTwoPlaces","backdrop","zIndex","drawer","helpContainer","helpEntry","marginTop","marginBottom","helpButton","top","HelpBackdrop","open","setOpen","Backdrop","themeDict","ReactGA","initialize","pageview","window","location","pathname","search","createMuiTheme","pageComponents","hmsTotalTimeString","totalTime","values","dataToTotalTime","App","timerRef","createRef","pageValue","taskElapsedTime","nextTask","fetchPageData","startNextTask","resetTimer","resetTimerBase","startTimer","initScheduleElapsedTime","showNotification","Notification","requestPermission","console","log","content","newTaskElapsedTime","forEach","nextIndex","currentTaskElapsedTime","currentModded","setTime","extraData","PageComponent","pageFunc","fetchPageFunc","ThemeProvider","root","initialTime","lastUnit","startImmediately","onReset","onStart","formatValue","timeToUpdate","checkpoints","time","callback","ref","Hours","Minutes","Seconds","BottomNavigation","event","newValue","showLabels","navBar","BottomNavigationAction","icon","minWidth","maxWidth","minHeight","maxHeight","flexFlow","page","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f40d0cd8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // Reserved in case of use\r\n    timeText: {\r\n        color: theme.palette.primary.main,\r\n        userSelect: \"none\" // so that you cannot highlight the time, did so for personal aesthetics\r\n    },\r\n    timerContainer: {\r\n        width: 350,\r\n        height: 350,\r\n        borderRadius: \"50%\", // Ensures circular shape\r\n        borderColor: theme.palette.primary.main,\r\n    },\r\n}));\r\n\r\nexport default function TimerDisplay({hr, min, sec}) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box border={1} className={classes.timerContainer} display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n            <Grid container direction=\"row\" justify=\"center\">\r\n                <Typography item variant=\"h3\" className={classes.timeText}>{hr}</Typography>\r\n                <Typography item variant=\"h3\" className={classes.timeText}>:</Typography>\r\n                <Typography item variant=\"h3\" className={classes.timeText}>{min}</Typography>\r\n                <Typography item variant=\"h3\" className={classes.timeText}>:</Typography>\r\n                <Typography item variant=\"h3\" className={classes.timeText}>{sec}</Typography>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n}","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nexport default function TaskDisplay({current, next}) {\r\n    return (\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n            <Typography item variant=\"h2\">{current}</Typography>\r\n            <Typography item variant=\"h5\">Next: {next}</Typography>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TimerDisplay from './TimerDisplay.js';\r\nimport TaskDisplay from './TaskDisplay.js';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = theme => ({\r\n    timer: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        flexGrow: 1,\r\n    },\r\n    timerActual: {\r\n        width: \"70%\",\r\n        flexGrow: 0.6\r\n    },\r\n    taskDisplayContainer: {\r\n        flexGrow: 0.2\r\n    },\r\n    timerButtonContainer: {\r\n        flexGrow: 0.2\r\n    }\r\n});\r\n\r\nclass TimerComponent extends React.Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { start, stop, reset, current, next, hr, min, sec } = this.props.data;\r\n        return (\r\n            <Grid container item direction=\"column\" alignItems=\"center\" justify=\"space-evenly\" className={classes.timer}>\r\n                <Box item display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" className={classes.taskDisplayContainer}>\r\n                    <TaskDisplay current={current} next={next}></TaskDisplay>\r\n                </Box>\r\n                <Box item display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" className={classes.timerActual}>\r\n                    <TimerDisplay\r\n                        hr={hr}\r\n                        min={min}\r\n                        sec={sec}\r\n                    >\r\n                    </TimerDisplay>\r\n                </Box>\r\n                <Box item display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" className={classes.timerButtonContainer}>\r\n                    <ButtonGroup item color=\"primary\" size=\"large\" variant=\"contained\">\r\n                        <Button onClick={start}>Start</Button>\r\n                        <Button onClick={stop}>Stop</Button>\r\n                        <Button onClick={reset}>Reset</Button>\r\n                    </ButtonGroup>\r\n                </Box>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(TimerComponent);","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // Scrolls if content overflows and set background color\r\n    numInput: {\r\n        width: 50,\r\n        marginLeft: 5,\r\n        marginRight: 5,\r\n    },\r\n}));\r\n\r\nexport default function PeriodInput({ disabled, hr, min, sec, editFunc, index }) { // assumes that input default value for period is in seconds\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            <TextField\r\n                item\r\n                className={classes.numInput}\r\n                disabled={disabled}\r\n                margin=\"dense\"\r\n                label=\"Hr\"\r\n                value={hr}\r\n                type=\"number\"\r\n                onChange={(e) => {editFunc(index, \"hr\", Number(e.target.value));}}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n            <TextField\r\n                item\r\n                className={classes.numInput}\r\n                disabled={disabled}\r\n                margin=\"dense\"\r\n                label=\"Min\"\r\n                value={min}\r\n                type=\"number\"\r\n                onChange={(e) => {editFunc(index, \"min\", Number(e.target.value));}}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n            <TextField\r\n                item\r\n                className={classes.numInput}\r\n                disabled={disabled}\r\n                margin=\"dense\"\r\n                label=\"Sec\"\r\n                value={sec}\r\n                type=\"number\"\r\n                onChange={(e) => {editFunc(index, \"sec\", Number(e.target.value));}}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport PeriodInput from './PeriodInput.js';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default function ScheduleEntry({index, isFirst, isLast, editable, entry, upFunc, downFunc, delFunc, addFunc, editFunc}) {\r\n    return (\r\n        <ListItem divider>\r\n            <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n                <Grid container item xs={2} sm={2} md={2} lg={2} xl={2} justify=\"flex-start\" alignItems=\"center\">\r\n                    <TextField\r\n                        disabled={!editable}\r\n                        margin=\"dense\"\r\n                        value={entry.name}\r\n                        onChange={(e) => {editFunc(index, \"name\", e.target.value)}}\r\n                    />\r\n                </Grid>\r\n                <Grid container item xs={6} sm={6} md={6} lg={6} xl={6} justify=\"center\" alignItems=\"center\">\r\n                    <PeriodInput disabled={!editable} hr={entry.hr} min={entry.min} sec={entry.sec} editFunc={editFunc} index={index}></PeriodInput>\r\n                </Grid>\r\n                <Grid container item xs={4} sm={4} md={4} lg={4} xl={4} justify=\"flex-end\" alignItems=\"center\" direction=\"row\">\r\n                    <IconButton item color=\"primary\" disabled={isFirst || !editable} disableElevation onClick={() => {upFunc(index);}}>\r\n                        <KeyboardArrowUpIcon></KeyboardArrowUpIcon>\r\n                    </IconButton>\r\n                    <IconButton item color=\"primary\" disabled={isLast || !editable} disableElevation onClick={() => {downFunc(index);}}>\r\n                        <KeyboardArrowDownIcon></KeyboardArrowDownIcon>\r\n                    </IconButton>\r\n                    <IconButton item color=\"primary\" disabled={!editable} disableElevation onClick={() => {addFunc(index);}}>\r\n                        <AddIcon></AddIcon>\r\n                    </IconButton>\r\n                    <IconButton item color=\"primary\" disabled={!editable} disableElevation onClick={() => {delFunc(index);}}>\r\n                        <DeleteIcon></DeleteIcon>\r\n                    </IconButton>\r\n                </Grid>\r\n            </Grid>\r\n        </ListItem>\r\n    );\r\n}","const secondsToHms = s => ({\r\n    hr: ((s - s % 3600) / 3600) % 60,\r\n    min: ((s - s % 60) / 60) % 60,\r\n    sec: s % 60\r\n});\r\n\r\nexport default secondsToHms;","const hmsToSeconds = hms => (hms.hr*3600 + hms.min*60 + hms.sec);\r\n\r\nexport default hmsToSeconds;","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ScheduleEntry from './ScheduleEntry.js';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport secondsToHms from '../scripts/secondsToHms.js';\r\nimport hmsToSeconds from '../scripts/hmsToSeconds.js';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = theme => ({\r\n    // Scrolls if content overflows and set background color\r\n    schedule: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        overflowY: \"scroll\",\r\n        flexGrow: 1\r\n    },\r\n    fab: {\r\n        position: \"absolute\",\r\n        bottom: 80,\r\n        right: 40\r\n    },\r\n    addButtonContainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    settingsContainer: {\r\n        position: \"absolute\",\r\n        bottom: 80,\r\n        left: 40\r\n    }\r\n});\r\n\r\nconst fabIconDict = {\r\n    \"false\": <EditIcon></EditIcon>,\r\n    \"true\": <DoneIcon></DoneIcon>\r\n}\r\n\r\nclass ScheduleComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: props.data.taskSchedule.map(entry => ({ name: entry.name, ...secondsToHms(entry.period) })), // converts entries to have period split into hr, min, sec attributes\r\n            editing: false, // Defaults, i.e. starts off not editing\r\n            settings: props.data.settings,\r\n        };\r\n        this.updateSchedule = props.func.updateSchedule;\r\n        this.changePage = props.func.changePage;\r\n        this.setEditing = this.setEditing.bind(this);\r\n        this.shiftUpEntry = this.shiftUpEntry.bind(this);\r\n        this.shiftDownEntry = this.shiftDownEntry.bind(this);\r\n        this.deleteEntry = this.deleteEntry.bind(this);\r\n        this.addEntry = this.addEntry.bind(this);\r\n        this.editEntry = this.editEntry.bind(this);\r\n        this.changeSetting = this.changeSetting.bind(this);\r\n    }\r\n\r\n    shiftUpEntry(index) {\r\n        let currentData = this.state.data;\r\n        [currentData[index - 1], currentData[index]] = [currentData[index], currentData[index - 1]];\r\n        this.setState({ data: currentData });\r\n    }\r\n\r\n    shiftDownEntry(index) {\r\n        let currentData = this.state.data;\r\n        [currentData[index], currentData[index + 1]] = [currentData[index + 1], currentData[index]];\r\n        this.setState({ data: currentData });\r\n    }\r\n\r\n    deleteEntry(index) {\r\n        let currentData = this.state.data;\r\n        currentData.splice(index, 1);\r\n        this.setState({ data: currentData });\r\n    }\r\n\r\n    addEntry(index) {\r\n        let currentData = this.state.data;\r\n        currentData.splice(index + 1, 0, { name: \"New Task\", hr: 0, min: 5, sec: 0 }); // Adding the default new task\r\n        this.setState({ data: currentData });\r\n    }\r\n\r\n    setEditing() {\r\n        const currentEditingState = this.state.editing;\r\n        // Update corresponding state for schedule data in parent App component given that status before edit button press was in editing, i.e. the press was to confirm the edit\r\n        if (currentEditingState) {\r\n            let newSchedule = this.state.data.map(entry => ({\r\n                name: entry.name,\r\n                period: hmsToSeconds({\r\n                    hr: entry.hr,\r\n                    min: entry.min,\r\n                    sec: entry.sec\r\n                })\r\n            }))\r\n            let newSettings = this.state.settings;\r\n            this.updateSchedule(newSchedule, newSettings);\r\n            // Changes back to Timer as you've just finished updating the schedule\r\n            this.changePage(\"timer\");\r\n        }\r\n        this.setState({ editing: !currentEditingState });\r\n    }\r\n\r\n    // Edits given attribute of entry (of given index) in state.data to specified value\r\n    editEntry(index, key, value) {\r\n        let currentData = this.state.data;\r\n        currentData[index][key] = value;\r\n        this.setState({ data: currentData });\r\n    }\r\n\r\n    // Changes setting state in this component only\r\n    changeSetting(e) {\r\n        let currentSettings = this.state.settings;\r\n        currentSettings[e.target.name] = e.target.checked;\r\n        this.setState({ settings: currentSettings });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const entries = this.state.data.map((entry, index, arr) => (\r\n            <ScheduleEntry\r\n                key={index}\r\n                index={index}\r\n                isFirst={index === 0}\r\n                isLast={index === arr.length - 1}\r\n                editable={this.state.editing}\r\n                entry={entry}\r\n                upFunc={this.shiftUpEntry}\r\n                downFunc={this.shiftDownEntry}\r\n                delFunc={this.deleteEntry}\r\n                addFunc={this.addEntry}\r\n                editFunc={this.editEntry}\r\n            >\r\n            </ScheduleEntry>\r\n        ));\r\n        return (\r\n            <div className={classes.schedule}>\r\n                <List>\r\n                    {entries}\r\n                    <ListItem className={classes.addButtonContainer}>\r\n                        <IconButton disabled={!this.state.editing} color=\"primary\" onClick={() => { this.addEntry(this.state.data.length - 1); }}>\r\n                            <AddIcon></AddIcon>\r\n                        </IconButton>\r\n                    </ListItem>\r\n                </List>\r\n                <FormGroup column className={classes.settingsContainer}>\r\n                    {Object.entries(this.state.settings).map(entry => (\r\n                        <FormControlLabel\r\n                            key={entry[0]}\r\n                            control={<Switch\r\n                                checked={entry[1]}\r\n                                name={entry[0]}\r\n                                onChange={this.changeSetting}\r\n                            />}\r\n                            label={entry[0]}\r\n                            disabled={!this.state.editing}\r\n                            color=\"secondary\"\r\n                        />\r\n                    ))}\r\n                </FormGroup>\r\n                <Fab color=\"secondary\" className={classes.fab} onClick={this.setEditing}>\r\n                    {fabIconDict[this.state.editing.toString()]}\r\n                </Fab>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(ScheduleComponent);\r\n","const numPadZeroToTwoPlaces = (value) => (value.toString().padStart(2, '0'));\r\n\r\nconst secondsToHmsString = s => {\r\n    const hr = ((s - s % 3600) / 3600) % 60;\r\n    const min = ((s - s % 60) / 60) % 60;\r\n    const sec = s % 60;\r\n    return [hr, min, sec].map(entry => numPadZeroToTwoPlaces(entry)).join(\":\");\r\n};\r\n\r\nexport default secondsToHmsString;","const pieChartTheme = [\r\n    \"#1976d2\", \"#dc004e\", \"#9c27b0\", \"#ff9800\",\r\n    \"#4caf50\", \"#f44336\", \"#1a237e\", \"#e57373\",\r\n    \"#d500f9\", \"#ffee58\", \"#e65100\", \"#b2ff59\",\r\n    \"#9fa8da\", \"#fff9c4\", \"#f50057\", \"#004d40\",\r\n]\r\n\r\nexport default pieChartTheme;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport pieChartTheme from '../pieChartTheme.js';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport secondsToHmsString from '../scripts/secondsToHmsString'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // Scrolls if content overflows and set background color\r\n    chartContainer: {\r\n        height: 350,\r\n        width: 350,\r\n    },\r\n}));\r\n\r\n// Function for converting the data passed as prop from App into the format the PieChart component requires\r\nconst dataToPieChartdata = data => {\r\n    let chartData = []\r\n    let index = 0;\r\n    for (const [key, value] of Object.entries(data)) {\r\n        // Only include in chart if entry's time value > 0, i.e. task has been done for some time\r\n        if (value > 0) {\r\n            chartData.push({\r\n                title: key,\r\n                value: value,\r\n                color: pieChartTheme[index % pieChartTheme.length]\r\n            });\r\n            index++;\r\n        }\r\n    }\r\n    // Return chartData only if it has more than 1 entry with value > 0, else return null to signal no chartable data\r\n    return chartData.length > 0 ? chartData : null\r\n}\r\n\r\n// Function for generating tooltip content\r\nconst tooltipContent = (index, chartData) => {\r\n    return secondsToHmsString(chartData[index].value);\r\n}\r\n\r\nexport default function PieChartDisplay({data, func}) {\r\n    const [hovered, setHovered] = React.useState(0);\r\n    const classes = useStyles();\r\n    const chartData = dataToPieChartdata(data);\r\n    const lineWidth = 30;\r\n    if (chartData) {\r\n        return (\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" data-tip=\"\" data-for=\"chart\" className={classes.chartContainer}>\r\n                <PieChart\r\n                    item\r\n                    data={chartData}\r\n                    lineWidth={lineWidth}\r\n                    paddingAngle={1}\r\n                    radius={40}\r\n                    labelPosition={100 - 3 * lineWidth / 2}\r\n                    label={({ dataEntry }) => (dataEntry.title)}\r\n                    labelStyle={(index) => ({\r\n                        fontSize: '3px',\r\n                        fontFamily: \"'Roboto', 'Helvetica', 'Arial', 'sans-serif'\",\r\n                        pointerEvents: 'none',\r\n                    })}\r\n                    className={classes.pieChart}\r\n                    animate\r\n                    onMouseOver={(_, index) => {\r\n                        setHovered(index);\r\n                    }}\r\n                    onMouseOut={() => {\r\n                        setHovered(null);\r\n                    }}\r\n                />\r\n                <ReactTooltip\r\n                    id=\"chart\"\r\n                    getContent={() =>\r\n                        typeof(hovered) === \"number\" ? tooltipContent(hovered, chartData) : null\r\n                    }\r\n                />\r\n            </Grid>\r\n        );\r\n    } else {\r\n        return (\r\n            <Grid container item direction=\"column\" justify=\"center\" alignItems=\"center\" className={classes.summary}>\r\n                <Typography variant=\"h4\">No tasks have been done</Typography>\r\n            </Grid>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport secondsToHmsString from '../scripts/secondsToHmsString';\r\nimport PieChartDisplay from './PieChartDisplay';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // Scrolls if content overflows and set background color\r\n    summary: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\n// Function to extract total elapsed time from data passed as prop from App, returns totalTime in seconds\r\nconst dataToTotalTime = data => {\r\n    let totalTime = 0;\r\n    for (const value of Object.values(data)) {\r\n        totalTime += value;\r\n    }\r\n    return totalTime;\r\n}\r\n\r\nexport default function SummaryComponent({data, func}) {\r\n    const classes = useStyles();\r\n    const hmsTotalTimeString = secondsToHmsString(dataToTotalTime(data));\r\n    return (\r\n        <Grid container direction=\"column\" justify=\"space-evenly\" alignItems=\"center\" data-tip=\"\" data-for=\"chart\" className={classes.summary}>\r\n            <Typography variant=\"h3\">Total Time: {hmsTotalTimeString}</Typography>\r\n            <PieChartDisplay data={data} func={func}></PieChartDisplay>\r\n        </Grid>\r\n    );\r\n}","const numPadZeroToTwoPlaces = (value) => (value.toString().padStart(2, '0'));\r\n\r\nexport default numPadZeroToTwoPlaces;","import React from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    helpContainer: {\r\n        width: \"70%\"\r\n    },\r\n    helpEntry: {\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n    },\r\n    helpButton: {\r\n        position: \"absolute\",\r\n        top: 5,\r\n        right: 10,\r\n    }\r\n}));\r\n\r\nconst helpTextTitle = \"Welcome!\";\r\nconst helpTextDesc = \"This is a timer for making schedules of tasks of specified durations. It is great for Pomodoro, HIIT, and many situations where interval timers are needed. Once a task is done, a notification will be made.\";\r\nconst helpStart = \"To begin, try the currently loaded schedule by pressing start, or click Schedule at the bottom to make your own task list. Note that you can set periods such as 90s and not worry about converting to minutes, the app will do that for you.\";\r\nconst helpPageDescHeader = \"What the three pages do\";\r\nconst helpTimerDesc = \"Timer: countdown of current task and display of current/next tasks.\";\r\nconst helpScheduleDesc = \"Schedule: customization of schedule of tasks is done.\";\r\nconst helpSummaryDesc = \"Summary: total time and breakdown of time use.\";\r\nconst helpText = \"Click anywhere to exit help\";\r\n\r\nexport default function HelpBackdrop() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true); // Defaults to being opened\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleToggle = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"text\" color=\"primary\" onClick={handleToggle} className={classes.helpButton} size=\"small\">\r\n                Help\r\n            </Button>\r\n            <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\r\n                <Grid className={classes.helpContainer} container direction=\"column\" justify=\"center\" alignItems=\"flex-start\">\r\n                    <Typography className={classes.helpEntry} item variant=\"h4\">{helpTextTitle}</Typography>\r\n                    <Typography className={classes.helpEntry} item variant=\"body1\">{helpTextDesc}</Typography>\r\n                    <Typography className={classes.helpEntry} item variant=\"body1\">{helpStart}</Typography>\r\n                    <Typography className={classes.helpEntry} item variant=\"h6\">{helpPageDescHeader}</Typography>\r\n                    <Typography className={classes.helpEntry} item variant=\"body1\">{helpTimerDesc}</Typography>\r\n                    <Typography className={classes.helpEntry} item variant=\"body1\">{helpScheduleDesc}</Typography>\r\n                    <Typography className={classes.helpEntry} item variant=\"body1\">{helpSummaryDesc}</Typography>\r\n                    <Typography className={classes.helpEntry} item variant=\"h6\">{helpText}</Typography>\r\n                </Grid>\r\n            </Backdrop>\r\n        </div>\r\n    );\r\n}","const themeDict = {\r\n    palette: { // Reserved in case modification is wanted\r\n    }\r\n}\r\n\r\nexport default themeDict;","// Import css\r\nimport './App.css';\r\n\r\n// Import React\r\nimport React from 'react';\r\n\r\n// Import Google Analytics\r\nimport ReactGA from 'react-ga';\r\n\r\n// Import Material UI components\r\nimport { withStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\n\r\n// Import icons\r\nimport TimerIcon from \"@material-ui/icons/Timer\";\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\n\r\n// Import the 3 pages' custom components\r\nimport TimerComponent from \"./components/TimerComponent.js\";\r\nimport ScheduleComponent from \"./components/ScheduleComponent.js\";\r\nimport SummaryComponent from \"./components/SummaryComponent.js\";\r\n\r\n// Import Timer component and supporting output formatting script\r\nimport Timer from 'react-compound-timer';\r\nimport numPadZeroToTwoPlaces from './scripts/numPadZeroToTwoPlaces.js';\r\n\r\n// Import Help component\r\nimport HelpBackdrop from './components/HelpBackdrop';\r\n\r\n// Import custom theme\r\nimport themeDict from './themeDict.js';\r\n\r\n// Setup Google Analytics\r\nReactGA.initialize(\"UA-176706567-3\");\r\nReactGA.pageview(window.location.pathname + window.location.search);\r\n\r\n// Setup theme\r\nconst theme = createMuiTheme(themeDict);\r\n\r\n// Defining styles\r\nconst useStyles = theme => ({\r\n  // Covers entire viewport\r\n  root: {\r\n    minWidth: \"100vw\",\r\n    maxWidth: \"100vw\",\r\n    minHeight: \"100vh\",\r\n    maxHeight: \"100vh\",\r\n    display: \"flex\",\r\n    flexFlow: \"column\",\r\n    alignItems: \"stretch\"\r\n  },\r\n\r\n  // Styling for page component if turns out necessary\r\n  page: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n  // Styling for navbar if turns out necessary\r\n  navBar: {\r\n  },\r\n});\r\n\r\n// Defining a dictionary for the 3 page components\r\nconst pageComponents = {\r\n  \"timer\": TimerComponent,\r\n  \"schedule\": ScheduleComponent,\r\n  \"summary\": SummaryComponent\r\n};\r\n\r\n// App component class\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Code for allowing parent to use the setTime method of its children\r\n    this.timerRef = React.createRef();\r\n\r\n    // State declaration\r\n    this.state = {\r\n      pageValue: \"timer\", // Default page to display\r\n      taskSchedule: [ // Default tasks in schedule, name is task name, period is task period in seconds\r\n        { name: \"Task 1\", period: 5 },\r\n        { name: \"Task 2\", period: 8 },\r\n        { name: \"Task 3\", period: 10 },\r\n      ],\r\n      taskElapsedTime: { // Default taskElapsedTime corresponding to default taskSchedule\r\n        \"Task 1\": 0,\r\n        \"Task 2\": 0,\r\n        \"Task 3\": 0\r\n      },\r\n      current: 0, // Default index for task, i.e. start by default on first task with index 0 in this.state.taskSchedule\r\n      settings: {\r\n        \"Repeat\": true,\r\n      }\r\n    }\r\n\r\n    // Binding methods to this\r\n    this.nextTask = this.nextTask.bind(this);\r\n    this.fetchPageData = this.fetchPageData.bind(this);\r\n    this.updateSchedule = this.updateSchedule.bind(this);\r\n    this.startNextTask = this.startNextTask.bind(this);\r\n    this.resetTimer = this.resetTimer.bind(this);\r\n    this.resetTimerBase = this.resetTimerBase.bind(this);\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.initScheduleElapsedTime = this.initScheduleElapsedTime.bind(this);\r\n    this.showNotification = this.showNotification.bind(this);\r\n    this.changePage = this.changePage.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Code for requesting permission to send notifications\r\n    if (!(\"Notification\" in window)) {\r\n      console.log(\"This browser does not support desktop notification\");\r\n    } else {\r\n      Notification.requestPermission();\r\n    }\r\n  }\r\n\r\n  // Method to show specified content in the arguments as a notification, expects content to be a string\r\n  showNotification(content) {\r\n    new Notification(content);\r\n  }\r\n\r\n  // Initialises it to have time 0 for all tasks based on the specified schedule\r\n  initScheduleElapsedTime(newSchedule) {\r\n    let newTaskElapsedTime = {};\r\n    this.state.taskSchedule.forEach((entry) => {\r\n      newTaskElapsedTime[entry.name] = 0;\r\n    });\r\n    this.setState({ taskElapsedTime: newTaskElapsedTime });\r\n  }\r\n\r\n  // Update schedule alongside its settings\r\n  updateSchedule(newSchedule, newSettings) {\r\n    // Sets the new schedule and settings and only reset timer to reinitialise it after the update is complete\r\n    this.setState({ taskSchedule: newSchedule, settings : newSettings}, this.resetTimerBase);\r\n  }\r\n\r\n  // Returns name of next task in schedule given index of current task in taskSchedule\r\n  // current is expected to be an integer index corresponding to the task in the taskSchedule list\r\n  nextTask(current) {\r\n    const nextIndex = current+1;\r\n    if (nextIndex === this.state.taskSchedule.length && !this.state.settings[\"Repeat\"]) {\r\n      return \"None (Schedule Complete)\";\r\n    } else {\r\n      return this.state.taskSchedule[nextIndex % this.state.taskSchedule.length].name;\r\n    }\r\n  }\r\n\r\n  // Updates state such that the next task is started and timer has countdown set to corresponding period, also adds the time of the finished task to corresponding elapsed time entry\r\n  startNextTask() {\r\n    let current = this.state.current;\r\n\r\n    // Stop the timer\r\n    this.timerRef.current.stop();\r\n\r\n    // Update elapsed time for the completed current task\r\n    let currentTaskElapsedTime = this.state.taskElapsedTime;\r\n    currentTaskElapsedTime[this.state.taskSchedule[current].name] += this.state.taskSchedule[current].period;\r\n    this.setState({taskElapsedTime: currentTaskElapsedTime});\r\n\r\n    // Set up next task\r\n    current += 1;\r\n    const currentModded = current % this.state.taskSchedule.length;\r\n    this.setState({current : currentModded});\r\n    this.timerRef.current.setTime(1000*this.state.taskSchedule[currentModded].period + 999); // Again, we add 999 to accomodate for how checkpoint is 999\r\n    if (current === this.state.taskSchedule.length && !this.state.settings[\"Repeat\"]) {\r\n      // Do nothing if schedule has reached its end and settings say no repeat. Elasped time is kept in storage so if you press start the elapsed time will accumulate on the previous run, unless of course you clicked reset\r\n    } else {\r\n      // If not at the end of schedule or repeat is enabled, then after setting up the next task, continue the timer countdown\r\n      this.timerRef.current.start();\r\n    }\r\n  }\r\n\r\n  fetchPageData(key, extraData) {\r\n    if (key === \"timer\") {\r\n      // Extra data attribute is given as a workaround to certain data that cannot be accessed via state in the Timer component\r\n      return {\r\n        current : this.state.taskSchedule[this.state.current].name,\r\n        next : this.nextTask(this.state.current),\r\n        ...extraData\r\n      };\r\n    } else if (key === \"schedule\") {\r\n      return ({\r\n        taskSchedule: this.state.taskSchedule,\r\n        settings: this.state.settings,\r\n      });\r\n    } else if (key === \"summary\") {\r\n      return this.state.taskElapsedTime;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  fetchPageFunc(key) {\r\n    if (key === \"timer\") {\r\n      return null;\r\n    } else if (key === \"schedule\") {\r\n      return {\r\n        updateSchedule: this.updateSchedule,\r\n        changePage: this.changePage,\r\n      };\r\n    } else if (key === \"summary\") {\r\n      return null;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Calls reset method of the Timer component, differs from resetTimer inm that resetTimer is designed to be called to modify state in App after Timer's reset method is called\r\n  // Hence, calling this method would call the resetTimer method as well\r\n  resetTimerBase() {\r\n    this.timerRef.current.reset();\r\n  }\r\n\r\n  // Resets task to first task and clears out elapsed time and setTime\r\n  resetTimer() {\r\n    this.timerRef.current.stop(); // Required as the default reset does not stop the timer after resetting\r\n    this.setState({current : 0});\r\n    this.initScheduleElapsedTime(this.state.taskSchedule);\r\n    this.timerRef.current.setTime(1000*this.state.taskSchedule[0].period + 999); // Again, we add 999 to accomodate for how checkpoint is 999\r\n  }\r\n\r\n  // Displays notification of current task when timer is started\r\n  startTimer() {\r\n    this.showNotification(\"Current Task: \" + this.state.taskSchedule[this.state.current].name);\r\n  }\r\n\r\n  // Changes page specified by key\r\n  changePage(key) {\r\n    this.setState({\r\n      pageValue: key\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // For allowing using our custom style\r\n    const { classes } = this.props;\r\n\r\n    // Dynamically specifies the pageComponent to be used depending on the currently selected page in the BottomNavigation\r\n    const PageComponent = pageComponents[this.state.pageValue];\r\n    const pageFunc = this.fetchPageFunc(this.state.pageValue);\r\n\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <Box className={classes.root}>\r\n          <Timer\r\n            initialTime={1000*this.state.taskSchedule[this.state.current].period + 999} // This is in ms as that is what this imported component uses, + 999 in order to shift times in this app by 999 so to complement how we want our timer to jump to next start time instead of turning to 0 (i.e. checkpoint time is 999 not 0)\r\n            direction=\"backward\"\r\n            lastUnit=\"h\" // Only compute time upto hours (not days)\r\n            startImmediately={false} // Defaults to paused\r\n            onReset={() => {this.resetTimer();}}\r\n            onStart={() => {this.startTimer();}}\r\n            formatValue={numPadZeroToTwoPlaces}\r\n            timeToUpdate={200}\r\n            checkpoints={[\r\n              {\r\n                time: 999,\r\n                callback: () => { this.startNextTask();}\r\n              }\r\n            ]}\r\n            ref={this.timerRef}\r\n          >\r\n            {({ start, stop, reset}) => (\r\n              <PageComponent\r\n                data={this.fetchPageData(this.state.pageValue, {\r\n                  start : start,\r\n                  stop : stop,\r\n                  reset : reset,\r\n                  hr : <Timer.Hours/>,\r\n                  min : <Timer.Minutes/>,\r\n                  sec : <Timer.Seconds/>,\r\n                })}\r\n                func={pageFunc}\r\n              >\r\n              </PageComponent>\r\n            )}\r\n          </Timer>\r\n          <BottomNavigation\r\n            value={this.state.pageValue}\r\n            onChange={(event, newValue) => {this.changePage(newValue)}}\r\n            showLabels\r\n            className={classes.navBar}\r\n          >\r\n            <BottomNavigationAction label=\"Timer\" value=\"timer\" icon={<TimerIcon />} />\r\n            <BottomNavigationAction label=\"Schedule\" value=\"schedule\" icon={<ListAltIcon />} />\r\n            <BottomNavigationAction label=\"Summary\" value=\"summary\" icon={<BarChartIcon />} />\r\n          </BottomNavigation>\r\n        </Box>\r\n        <HelpBackdrop></HelpBackdrop>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.js';\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App></App>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}